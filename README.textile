h1. awesomemarkup â€” generate markup without all the headache.

h2. what's this?

Sometimes, despite all the separation you've done between your behavior and your presentation, you just have to generate some markup in Javascript. Inserting a div here, adding a link there. Usually, that sort of code ends up looking like this:

bc. var $elem = $('<div class="loadingSpinner ' + someStr + ' ' + (someBool ? 'active' : '') + '"></div>');

Good luck reading that. By contrast, awesomemarkup lets you write that same block of mishmash like this:

bc. var $elem = $.tag({
  _: 'div',
  class: [
    'loadingSpinner',
    someStr,
    { i: someBool, t: 'active' }
  ]
});

Of course, it does a lot, lot more, too! ...I'll document all that later.

h2. it works with your web framework!

By default, awesomemarkup will just dump itself into the global namespace under the name @awesomemarkup@. However, if it finds that it's being included as a CommonJS module, it'll export the critical function as @exports.tag()@; if it finds jQuery it'll alias to @$.tag()@ (and automatically make the generated markup a jQuery), and so on.

h2. it has unit tests!

To run them, grab @jasmine-node@ from @npm@, then simply fire off @jasmine-node spec@.

h2. licensing

Licensed under the "WTFPL":http://sam.zoy.org/wtfpl/

